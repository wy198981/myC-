<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:code="clr-namespace:UI"
                    xmlns:SFMControls="clr-namespace:SFMControls;assembly=SFMControls"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
                    >

    <SolidColorBrush x:Key="ButtonForeground" Color="Black"/>
    <SolidColorBrush x:Key="ButtonMouseOverForeground" Color="Black"/>
    <SolidColorBrush x:Key="ButtonDiabledForeground" Color="#FF7A7A7A"/>
    <LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFDFCF9" Offset="0"/>
        <GradientStop Color="#FFFBE377" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonPressedForeground" Color="Black"/>
    <LinearGradientBrush x:Key="ButtonBackground" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FF54A5FE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonMouseOverBackground" EndPoint="0,1" StartPoint="0,0" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FF256AFD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDisabledBackground" MappingMode="RelativeToBoundingBox" EndPoint="0,1" StartPoint="0,0" SpreadMethod="Pad">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFA6C8F0" Offset="0.536"/>
    </LinearGradientBrush>

    <!--<System:Double x:Key="WindowFontSize">13.333</System:Double>-->
    <LinearGradientBrush x:Key="WindowBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFCFE4FF" Offset="0"/>
        <GradientStop Color="White" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ButtonStyleBase" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="16.667"/>
        <Setter Property="FontFamily" Value="Arial,SimSun"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}"/>
    <Style TargetType="{x:Type SFMControls:ButtonSfm}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="Template" Value="{DynamicResource ButtonSfmTemplate}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius"  Value="3"/>
    </Style>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <!--<Setter Property="FontSize" Value="{DynamicResource WindowFontSize}"/>-->
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template" Value="{DynamicResource MetroWindowControlTemplate}"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
    </Style>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFE3E3E3"/>
    </Style>
    <System:Double x:Key="TabItemFontSize">16</System:Double>
    <SolidColorBrush x:Key="TabItemBackground" Color="#FFEAEAEA"/>
    <SolidColorBrush x:Key="TabItemForeground" Color="Black"/>
    <FontFamily x:Key="TabItemFont">Microsoft YaHei</FontFamily>

    <Style x:Key="TabItemStyleBase" TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="{DynamicResource TabItemFontSize}"/>
        <Setter Property="Background" Value="{DynamicResource TabItemBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TabItemForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource TabItemFont}"/>
    </Style>


    <ControlTemplate x:Key="ButtonSfmTemplate" TargetType="{x:Type SFMControls:ButtonSfm}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
			CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_Background"
			Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}" Visibility="{TemplateBinding Visibility}">
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
    		<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsMouseOver" Value="True"/>
    				<Condition Property="IsEnabled" Value="True"/>
    			</MultiTrigger.Conditions>
    			<Setter Property="Foreground" Value="{DynamicResource ButtonMouseOverForeground}"/>
    			<Setter Property="Background" Value="{DynamicResource ButtonMouseOverBackground}"/>
    		</MultiTrigger>
    		<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsPressed" Value="True"/>
    				<Condition Property="IsEnabled" Value="True"/>
    			</MultiTrigger.Conditions>
    			<Setter Property="Foreground" Value="{DynamicResource ButtonPressedForeground}"/>
    			<Setter Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
    		</MultiTrigger>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Background" Value="{DynamicResource ButtonDisabledBackground}"/>
    			<Setter Property="Foreground" Value="{DynamicResource ButtonDiabledForeground}"/>
			</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
						x:Name="Chrome"
						BorderBrush="{TemplateBinding BorderBrush}"
						Margin="0"
						Background="{TemplateBinding Background}"
						SnapsToDevicePixels="True">
                        <ContentPresenter
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="0,2,3,0"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="MetroWindowControlTemplate" TargetType="{x:Type SFMControls:WindowBase}">
        <Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid x:Name="MoveableRectangle" Grid.Row="0" Background="{TemplateBinding HeaderBackground}" Height="{TemplateBinding HeaderHeight}" >
                    <Border BorderThickness="{Binding HearderBorderThickness}" BorderBrush="{TemplateBinding HeaderBorderBrush}" CornerRadius="{TemplateBinding HearderCornerRadius}">
                        <Border.Effect>
                            <BlurEffect/>
                        </Border.Effect>
                    </Border>
                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Height="{TemplateBinding HeaderHeight}" Orientation="Horizontal">
                        <Image Source="{TemplateBinding Icon}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,5,0,5"/>
                        <Label Content="{TemplateBinding Title}" Foreground="{TemplateBinding HeaderForeground}" FontFamily="{TemplateBinding HeaderFontFamily}" FontSize="{TemplateBinding HeaderFontSize}" VerticalContentAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1" Background="{TemplateBinding Background}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                </Grid>
            </Grid>

            <Grid x:Name="ResizeGrid">
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					VerticalAlignment="Top"
					Height="5"
					x:Name="Top"
					Margin="5,0,5,0" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					x:Name="Bottom"
					Height="5"
					VerticalAlignment="Bottom"
					Margin="5,0,5,0" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					HorizontalAlignment="Left"
					Margin="0,5,0,5"
					Width="5"
					x:Name="Left"/>
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					Margin="0,5,0,5"
					Width="5"
					HorizontalAlignment="Right"
					x:Name="Right" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					HorizontalAlignment="Left"
					VerticalAlignment="Bottom"
					Width="5"
					Height="5"
					x:Name="BottomLeft" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					VerticalAlignment="Bottom"
					Height="5"
					Width="5"
					HorizontalAlignment="Right"
					x:Name="BottomRight" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					HorizontalAlignment="Right"
					Width="5"
					Height="5"
					VerticalAlignment="Top"
					x:Name="TopRight" />
                <Rectangle
					Stroke="{x:Null}"
					Fill="Transparent"
					HorizontalAlignment="Left"
					Width="6"
					VerticalAlignment="Top"
					Height="5"
					x:Name="TopLeft" />
            </Grid>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Column="0">
                <Button x:Name="SkinButton" Style="{StaticResource WindowButtonStyle}" Content="-" Visibility="Collapsed" />
                <Button x:Name="MinimizeButton" Style="{StaticResource WindowButtonStyle}" Content="0" Visibility="Collapsed" />
                <Button x:Name="RestoreButton" Style="{StaticResource WindowButtonStyle}" Content="1" Visibility="Collapsed" />
                <Button x:Name="CloseButton" Style="{StaticResource WindowButtonStyle}" Content="r" />
            </StackPanel>

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="Content" TargetName="RestoreButton" Value="1"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Content" TargetName="RestoreButton" Value="2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="OfficeTabControl" TargetType="{x:Type TabControl}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="SelectionStates">
                    <VisualState Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="buttonBackgroundShape" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Unselected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="buttonBackgroundShape" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="160" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Border   Name="buttonBackgroundShape"  Grid.Column="0"  BorderBrush="LightGray"  BorderThickness="0.5"  SnapsToDevicePixels="True" />
            <StackPanel IsItemsHost="True" Grid.Column="0" Margin="0,0,-1,0" SnapsToDevicePixels="True" />
            <ContentPresenter Content="{TemplateBinding SelectedContent}" Grid.Column="1" Margin="5,0,0,0" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="OfficeTabControlItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="True">
                        <Border  x:Name="buttonShape" Opacity="0" BorderBrush="#FF0343A6" BorderThickness="0,2" Height="40" SnapsToDevicePixels="True">
                            <Path Data="M214,108 L346,108 346.125,118.125 337.75,126.125 346.375,134   346.375,143.875 214.25,144.25 z" SnapsToDevicePixels="True" Stretch="Fill" Height="40">
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.2,0.5" RadiusX="0.8" RadiusY="0.8">
                                        <GradientStop Color="#FF5FA3F6" Offset="0" />
                                        <GradientStop Color="#FF0C55B9" Offset="1" />
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Border>

                        <Border x:Name="hoverShape" Height="40" Margin="0,0,1,0" SnapsToDevicePixels="True" BorderThickness="0,0,1,0" BorderBrush="LightGray">
                            <Border BorderBrush="#FFA1B7EA" BorderThickness="0,1" Background="#FFE5EEF9" Height="40" SnapsToDevicePixels="True" />
                        </Border>

                        <Border BorderThickness="0,0,0,1" BorderBrush="#FFC3D2E5">
                            <ContentPresenter x:Name="buttonText"   Margin="15,0,5,0"  TextBlock.FontFamily="Calibri" TextBlock.FontSize="12pt" TextBlock.Foreground="Black" Content="{TemplateBinding Header}" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="buttonShape" Value="1"/>
                            <Setter Property="Opacity" TargetName="hoverShape" Value="0"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="hoverShape" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="hoverShape" Value="1"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="150"/>
    </Style>
	<Style TargetType="DataGrid">
		<Setter Property="HorizontalGridLinesBrush" Value="#FFE3E3E3"/>
		<Setter Property="VerticalGridLinesBrush" Value="#FFE3E3E3"/>
		<Setter Property="BorderBrush" Value="#FFC3D2E5"/>
	</Style>
	<Style TargetType="GroupBox">
		<Style.Resources>
			<BorderGapMaskConverter x:Key="BorderGapMaskConverter"/> 
		</Style.Resources>
		<Setter Property="BorderBrush" Value="#FFC3D2E5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FontFamily" Value="Arial,SimSun"/>
		<Setter Property="FontSize" Value="16.667"/>
		<Setter Property="Template">  
            <Setter.Value>  
                <ControlTemplate TargetType="{x:Type GroupBox}">  
                    <Grid SnapsToDevicePixels="true">  
                        <Grid.ColumnDefinitions>  
                            <ColumnDefinition Width="6" />  
                            <ColumnDefinition Width="Auto" />  
                            <ColumnDefinition Width="*" />  
                            <ColumnDefinition Width="6" />  
                        </Grid.ColumnDefinitions>  
                        <Grid.RowDefinitions>  
                            <RowDefinition Height="Auto" />  
                            <RowDefinition Height="Auto" />  
                            <RowDefinition Height="*" />  
                            <RowDefinition Height="6" />  
                        </Grid.RowDefinitions>  
                        <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />  
                        <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">  
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />  
                        </Border>  
                        <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />  
                        <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">  
                            <Border.OpacityMask>  
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">  
                                    <Binding ElementName="Header" Path="ActualWidth" />  
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />  
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />  
                                </MultiBinding>  
                            </Border.OpacityMask>  
                        </Border>  
                    </Grid>  
                </ControlTemplate>  
            </Setter.Value>  
        </Setter>  
	</Style>
    <Style TargetType="ListBox">
    	<Setter Property="BorderBrush" Value="#FFC3D2E5"/>
		
	</Style>
    <Style TargetType="TreeView">
    	<Setter Property="BorderBrush" Value="#FFC3D2E5"/>
		
	</Style>
    
</ResourceDictionary>